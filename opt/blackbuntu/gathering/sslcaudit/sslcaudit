#!/usr/bin/env python

# ----------------------------------------------------------------------
# SSLCAUDIT - a tool for automating security audit of SSL clients
# Released under terms of GPLv3, see COPYING.TXT
# Copyright (C) 2012 Alexandre Bezroutchko abb@gremwell.com
# ----------------------------------------------------------------------
# Code handling keyboard interrupts contributed by Raf Somers (raf.somers@telenet.be)
# ----------------------------------------------------------------------


import sys, logging
from src.core.ConfigError import ConfigError
from src.core.SSLCAuditCLI import SSLCAuditCLI

def check_dependencies():
    # make sure M2Crypto is installed
    try:
        import M2Crypto
        return True
    except ImportError as ex:
        print 'Failed to load M2Crypto: %s' % ex
        print
        print 'Sslcaudit requires M2Crypto library. Please install your OS package or see'
        print 'website http://chandlerproject.org/bin/view/Projects/MeTooCrypto.'
        return False

def init_controller(argv):
    # initialize the controller
    try:
        controller = SSLCAuditCLI(argv[1:])
        controller.start()
        return controller
    except KeyboardInterrupt as ex:
        print 'Got KeyboardInterrupt exception before controller loop started, exiting'
        return None
    except ConfigError as ex:
        print 'Configuration error: %s' % ex
        return None
    except RuntimeError as ex:
        print 'Runtime error: %s' % ex
        return None

def run(controller):
    # wait for the main thread to finish, handle Ctrl-C if any
    interrupted_by_user = False
    while controller.isAlive():
        try:
            controller.join(1)
        except KeyboardInterrupt:
            print 'Got KeyboardInterrupt exception, aborting the program ...'
            controller.stop() # graceful death
            interrupted_by_user = True
 
    # if the program is aborted by the user, return exitcode 1
    if interrupted_by_user:
        return 1
    else:
        return 0

def main(argv):
    if not check_dependencies():
        return 1
    c = init_controller(argv)
    if c is None:
        return 1
    return run(c)

if __name__ == "__main__":
    logging.basicConfig()
    sys.exit(main(sys.argv))

